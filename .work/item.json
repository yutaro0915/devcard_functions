{
  "feature_name": "developer-feedback-fixes-and-api-completion",
  "status": "draft",
  "api_changes": [
    {
      "path": "getSavedCards",
      "method": "Callable Function",
      "change_type": "enhancement",
      "breaking": false,
      "details": "startAfter パラメータ追加（ページネーション）、limit デフォルト値変更（100 → 20）、cardType マイグレーション修正（undefined → 'public'）、hasUpdate 境界条件修正（< → <=）",
      "reason": "Issue #24, #25, #20 対応。無限スクロール実現、既存データ互換性確保、更新検知の正確性向上"
    },
    {
      "path": "createExchangeToken",
      "method": "Callable Function",
      "change_type": "new-endpoint",
      "breaking": false,
      "details": "PrivateCard交換用トークン生成API。パラメータなし、レスポンス: {tokenId, expiresAt, qrCodeData}。1分間有効、1回限り使用",
      "reason": "Issue #23 対応。QRコード交換フローの完成、savePrivateCard API との連携"
    },
    {
      "path": "SavedCardRepository.save()",
      "method": "Infrastructure",
      "change_type": "fix-bug",
      "breaking": false,
      "details": "savedCardId 重複チェック追加（最大3回リトライ）、.set() → .create() で既存データ保護",
      "reason": "Issue #21 (Critical) 対応。データ破壊リスクの排除"
    },
    {
      "path": "ManualSyncUseCase / GitHubApiClient",
      "method": "Application/Infrastructure",
      "change_type": "refactor",
      "breaking": false,
      "details": "カスタムエラークラス導入（UserNotFoundError, PublicCardNotFoundError等）、null/空文字列の明示的ハンドリング",
      "reason": "Issue #17, #18 対応。エラーハンドリングの保守性向上、データ正規化の明確化"
    }
  ],
  "security_notes": [
    "createExchangeToken: 認証必須、自分のPrivateCardからのみトークン生成可能",
    "トークンは1分間有効、1回限り使用（セキュリティ境界の明確化）",
    "savedCardId重複チェックによるデータ破壊防止（Critical対応）",
    "カスタムエラークラスによるエラー情報の漏洩防止"
  ],
  "tests_required": [
    "Issue #24: cardType未定義の既存データが 'public' にフォールバックする",
    "Issue #23: createExchangeToken が正しくトークンを生成する",
    "Issue #23: PrivateCard未作成の場合、not-foundエラーになる",
    "Issue #25: startAfter なしで先頭から取得",
    "Issue #25: startAfter ありで指定位置から取得",
    "Issue #25: 存在しない startAfter で invalid-argument",
    "Issue #21: savedCardId が重複しない場合、正常保存",
    "Issue #21: savedCardId が重複した場合、リトライして保存",
    "Issue #21: 3回リトライしても重複する場合、エラー",
    "Issue #20: lastKnownUpdatedAt === masterUpdatedAt で hasUpdate=true",
    "Issue #17: UserNotFoundError / PublicCardNotFoundError の型判定",
    "Issue #18: GitHub API の null/空文字列が undefined に変換される"
  ],
  "client_work_items": [
    "getSavedCards の limit デフォルト値変更（100 → 20）に対応。必要に応じて limit: 100 を明示",
    "createExchangeToken を使用して QRコード交換フローを実装",
    "startAfter を使用して無限スクロールを実装（オプショナル）",
    "cardType が常に定義されることを前提にUI実装（undefined チェック不要に）",
    "hasUpdate の更新検知がより正確になったことを確認"
  ],
  "breaking_changes": false,
  "notes_for_frontend": "この変更はすべて後方互換性があります。\n\n主な改善点:\n1. createExchangeToken API が追加され、PrivateCard交換フローが完成します\n2. getSavedCards にページネーション（startAfter）が追加され、無限スクロールが可能になります\n3. limit のデフォルト値が 100 → 20 に変更されますが、明示的に limit: 100 を指定すれば既存動作を維持できます\n4. cardType が常に定義されるようになり、undefined チェックが不要になります\n5. 内部品質が向上し、エラーハンドリングとデータ整合性が改善されます\n\n注意事項:\n- QRコード交換フローの実装には createExchangeToken → QRコード表示 → savePrivateCard の流れが必要です\n- 無限スクロールを実装する場合は startAfter パラメータを使用してください\n- デフォルト取得件数が変わるため、一覧画面での表示確認を推奨します",
  "backend_commit_sha": null
}
