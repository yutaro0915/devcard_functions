# =============================================================================
# DevCard Backend - Production Environment Configuration Template
# =============================================================================
# このファイルは本番環境で必要な設定値のテンプレートです。
# 実際の値を設定する際は、Firebase Functions Config または Secret Manager を使用してください。
#
# 注意:
# - このファイルはGitにコミットされます（実際の値は含めないでください）
# - 実際の機密情報は .env.production.local に記載（.gitignore済み）
# - 本番環境では Firebase Functions Config / Secret Manager を使用推奨
# =============================================================================

# -----------------------------------------------------------------------------
# 1. Firebase Project Configuration
# -----------------------------------------------------------------------------
# Firebase プロジェクトID
FIREBASE_PROJECT_ID=dev-card-ae929

# Firestore リージョン
FIRESTORE_REGION=asia-northeast1

# Firebase Functions リージョン
FUNCTIONS_REGION=us-central1

# -----------------------------------------------------------------------------
# 2. GitHub OAuth Configuration
# -----------------------------------------------------------------------------
# GitHub OAuth Client ID（公開情報）
# 設定方法: https://github.com/settings/developers
GITHUB_CLIENT_ID=your_github_client_id_here

# GitHub OAuth Client Secret（機密情報）
# ⚠️ Secret Manager 使用推奨
# 設定コマンド: firebase functions:secrets:set GITHUB_CLIENT_SECRET
GITHUB_CLIENT_SECRET=your_github_client_secret_here

# GitHub API Base URL（変更不要）
GITHUB_API_BASE_URL=https://api.github.com

# -----------------------------------------------------------------------------
# 3. CORS Configuration
# -----------------------------------------------------------------------------
# 許可するオリジン（カンマ区切り）
# 本番環境: 実際のフロントエンドドメインのみ許可
CORS_ALLOWED_ORIGINS=https://devcard.com,https://www.devcard.com

# 開発環境: localhost も許可する場合
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,https://devcard.com

# -----------------------------------------------------------------------------
# 4. Rate Limiting / Security
# -----------------------------------------------------------------------------
# API呼び出しレート制限（1ユーザーあたり/分）
RATE_LIMIT_PER_MINUTE=60

# トークン有効期限（秒）
EXCHANGE_TOKEN_EXPIRY_SECONDS=60

# 画像アップロード最大サイズ（バイト）
MAX_IMAGE_SIZE_BYTES=5242880  # 5MB

# -----------------------------------------------------------------------------
# 5. External API Configuration (Future)
# -----------------------------------------------------------------------------
# Qiita API Token（将来対応）
# QIITA_ACCESS_TOKEN=your_qiita_token_here

# Zenn API Token（将来対応）
# ZENN_ACCESS_TOKEN=your_zenn_token_here

# X (Twitter) API Configuration（将来対応）
# X_API_KEY=your_x_api_key_here
# X_API_SECRET=your_x_api_secret_here

# -----------------------------------------------------------------------------
# 6. Monitoring & Logging
# -----------------------------------------------------------------------------
# ログレベル（debug, info, warn, error）
LOG_LEVEL=info

# Sentry DSN（エラートラッキング、オプショナル）
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# -----------------------------------------------------------------------------
# 7. Feature Flags (Optional)
# -----------------------------------------------------------------------------
# バッジ機能の有効化
FEATURE_BADGE_ENABLED=true

# プライベート名刺交換機能の有効化
FEATURE_PRIVATE_CARD_ENABLED=true

# 画像アップロード機能の有効化
FEATURE_IMAGE_UPLOAD_ENABLED=true

# -----------------------------------------------------------------------------
# 使用方法
# -----------------------------------------------------------------------------
#
# 【方法1】Firebase Functions Config を使用（推奨）
#
# 設定コマンド:
#   firebase functions:config:set github.client_id="YOUR_CLIENT_ID"
#   firebase functions:config:set github.client_secret="YOUR_CLIENT_SECRET"
#   firebase functions:config:set cors.allowed_origins="https://devcard.com,https://www.devcard.com"
#
# 確認コマンド:
#   firebase functions:config:get
#
# コード内での取得:
#   import * as functions from 'firebase-functions';
#   const githubClientId = functions.config().github.client_id;
#
# -----------------------------------------------------------------------------
#
# 【方法2】Firebase Secret Manager を使用（機密情報推奨）
#
# 設定コマンド:
#   echo -n "YOUR_GITHUB_CLIENT_SECRET" | firebase functions:secrets:set GITHUB_CLIENT_SECRET
#
# 確認コマンド:
#   firebase functions:secrets:access GITHUB_CLIENT_SECRET
#
# コード内での取得:
#   import { defineSecret } from 'firebase-functions/params';
#   const githubClientSecret = defineSecret('GITHUB_CLIENT_SECRET');
#
#   export const myFunction = onCall({ secrets: [githubClientSecret] }, (request) => {
#     const secret = githubClientSecret.value();
#   });
#
# -----------------------------------------------------------------------------
#
# 【方法3】ローカル開発用 .env.production.local
#
# 1. このファイルをコピー:
#    cp .env.production.example .env.production.local
#
# 2. 実際の値を記入（.gitignoreに追加済み）
#
# 3. Firebase Emulator で自動的に読み込まれる
#
# -----------------------------------------------------------------------------
