rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Private user data (OAuth tokens, settings, etc.)
    // Only the authenticated user can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Saved cards subcollection
      match /saved_cards/{savedCardId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Public cards - anyone can read, only Cloud Functions can write
    match /public_cards/{userId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions (with admin privileges) can write
    }

    // Private cards - only the owner can read, only Cloud Functions can write
    match /private_cards/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Only Cloud Functions (with admin privileges) can write
    }

    // Exchange tokens - only Cloud Functions can read/write
    match /exchange_tokens/{tokenId} {
      allow read, write: if false; // Only Cloud Functions (with admin privileges)
    }

    // Badges - everyone can read, only Cloud Functions can write
    match /badges/{badgeId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions (with admin privileges)
    }

    // Moderators - only Cloud Functions can read/write
    match /moderators/{userId} {
      allow read, write: if false; // Only Cloud Functions (with admin privileges)
    }

    // User badges subcollection - everyone can read, only Cloud Functions can write
    match /users/{userId}/badges/{badgeId} {
      allow read: if true;
      allow write: if false; // Only Cloud Functions (with admin privileges)
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
